{"version":3,"sources":["markdown.min.js"],"names":["root","factory","define","amd","marked","require","RevealMarkdown","exports","module","this","DEFAULT_SLIDE_SEPARATOR","DEFAULT_NOTES_SEPARATOR","DEFAULT_ELEMENT_ATTRIBUTES_SEPARATOR","DEFAULT_SLIDE_ATTRIBUTES_SEPARATOR","SCRIPT_END_PLACEHOLDER","getMarkdownFromSlide","section","text","querySelector","textContent","leadingWs","replace","RegExp","match","length","leadingTabs","getForwardedAttributes","attributes","result","i","len","name","value","test","push","join","getSlidifyOptions","options","separator","notesSeparator","createMarkdownSlide","content","notesMatch","split","trim","slidify","markdown","matches","isHorizontal","separatorRegex","verticalSeparator","horizontalSeparatorRegex","lastIndex","wasHorizontal","sectionStack","exec","notes","substring","index","markdownSections","Array","forEach","child","processSlides","Promise","resolve","externalPromises","slice","call","document","querySelectorAll","getAttribute","reject","xhr","XMLHttpRequest","url","datacharset","overrideMimeType","onreadystatechange","readyState","status","bind","open","send","e","alert","loadExternalMarkdown","then","outerHTML","responseText","innerHTML","all","addAttributeInElement","node","elementTarget","mardownClassesInElementsRegex","mardownClassRegex","nodeValue","classes","matchesClass","setAttribute","convertSlides","sections","addAttributes","element","previousElement","separatorElementAttributes","separatorSectionAttributes","undefined","childNodes","previousParentElement","childElement","j","aPreviousChildElement","tagName","parentSection","nodeName","nodeType","Node","COMMENT_NODE","parentNode","appendChild","init","callback","hljs","setOptions","highlight","code","lang","highlightAuto","Reveal","getConfig","registerPlugin"],"mappings":"CAKC,SAAUA,EAAMC,GACM,mBAAXC,QAAyBA,OAAOC,KAC1CH,EAAKI,OAASC,QAAS,YACvBL,EAAKM,eAAiBL,EAASD,EAAKI,SACP,iBAAZG,QACjBC,OAAOD,QAAUN,EAASI,QAAS,aAGnCL,EAAKM,eAAiBL,EAASD,EAAKI,QARtC,CAUGK,KAAM,SAAUL,GAElB,IAAIM,EAA0B,kBAC7BC,EAA0B,UAC1BC,EAAuC,wBACvCC,EAAqC,0BAElCC,EAAyB,iBAO7B,SAASC,EAAsBC,GAG9B,IAGIC,GAHWD,EAAQE,cAAe,oBAAuBF,EAAQE,cAAe,WAG3DF,GAAUG,YAK/BC,GAFJH,EAAOA,EAAKI,QAAS,IAAIC,OAAQR,EAAwB,KAAO,eAE3CS,MAAO,aAAc,GAAGC,OAC5CC,EAAcR,EAAKM,MAAO,aAAc,GAAGC,OAS5C,OAPIC,EAAc,EACjBR,EAAOA,EAAKI,QAAS,IAAIC,OAAO,WAAaG,EAAc,IAAI,KAAM,MAE7DL,EAAY,IACpBH,EAAOA,EAAKI,QAAS,IAAIC,OAAO,SAAWF,EAAY,IAAK,KAAM,OAG5DH,EAUR,SAASS,EAAwBV,GAKhC,IAHA,IAAIW,EAAaX,EAAQW,WACrBC,EAAS,GAEJC,EAAI,EAAGC,EAAMH,EAAWH,OAAQK,EAAIC,EAAKD,IAAM,CACvD,IAAIE,EAAOJ,EAAWE,GAAGE,KACxBC,EAAQL,EAAWE,GAAGG,MAGnB,8CAA8CC,KAAMF,KAEpDC,EACHJ,EAAOM,KAAMH,EAAO,KAAOC,EAAQ,KAGnCJ,EAAOM,KAAMH,IAIf,OAAOH,EAAOO,KAAM,KAQrB,SAASC,EAAmBC,GAO3B,OALAA,EAAUA,GAAW,IACbC,UAAYD,EAAQC,WAAa5B,EACzC2B,EAAQE,eAAiBF,EAAQE,gBAAkB5B,EACnD0B,EAAQV,WAAaU,EAAQV,YAAc,GAEpCU,EAOR,SAASG,EAAqBC,EAASJ,GAEtCA,EAAUD,EAAmBC,GAE7B,IAAIK,EAAaD,EAAQE,MAAO,IAAIrB,OAAQe,EAAQE,eAAgB,QAUpE,OAR0B,IAAtBG,EAAWlB,SACdiB,EAAUC,EAAW,GAAK,wBAA0BtC,EAAOsC,EAAW,GAAGE,QAAU,YAO7E,iCAFPH,EAAUA,EAAQpB,QAAS,cAAeP,IAES,aAQpD,SAAS+B,EAASC,EAAUT,GAE3BA,EAAUD,EAAmBC,GAa7B,IAXA,IAGIU,EAEHC,EAEAP,EAPGQ,EAAiB,IAAI3B,OAAQe,EAAQC,WAAcD,EAAQa,kBAAoB,IAAMb,EAAQa,kBAAoB,IAAM,MAC1HC,EAA2B,IAAI7B,OAAQe,EAAQC,WAG/Cc,EAAY,EAEZC,GAAgB,EAEhBC,EAAe,GAGTP,EAAUE,EAAeM,KAAMT,IACrCU,MAAQ,OAGRR,EAAeG,EAAyBlB,KAAMc,EAAQ,MAEjCM,GAEpBC,EAAapB,KAAM,IAIpBO,EAAUK,EAASW,UAAWL,EAAWL,EAAQW,OAE7CV,GAAgBK,EAEnBC,EAAapB,KAAMO,GAInBa,EAAaA,EAAa9B,OAAO,GAAGU,KAAMO,GAG3CW,EAAYH,EAAeG,UAC3BC,EAAgBL,GAIfK,EAAgBC,EAAeA,EAAaA,EAAa9B,OAAO,IAAKU,KAAMY,EAASW,UAAWL,IAKjG,IAHA,IAAIO,EAAmB,GAGd9B,EAAI,EAAGC,EAAMwB,EAAa9B,OAAQK,EAAIC,EAAKD,IAE/CyB,EAAazB,aAAc+B,OAC9BD,GAAoB,YAAatB,EAAQV,WAAY,IAErD2B,EAAazB,GAAGgC,QAAS,SAAUC,GAClCH,GAAoB,0BAA4BnB,EAAqBsB,EAAOzB,GAAY,eAGzFsB,GAAoB,cAGpBA,GAAoB,YAAatB,EAAQV,WAAY,kBAAoBa,EAAqBc,EAAazB,GAAIQ,GAAY,aAI7H,OAAOsB,EASR,SAASI,IAER,OAAO,IAAIC,QAAS,SAAUC,GAE7B,IAAIC,EAAmB,GAEvB,GAAGC,MAAMC,KAAMC,SAASC,iBAAkB,oBAAqBT,QAAS,SAAU7C,EAASa,GAEtFb,EAAQuD,aAAc,iBAAkB/C,OAE3C0C,EAAiBhC,KA8CrB,SAA+BlB,GAE9B,OAAO,IAAIgD,QAAS,SAAUC,EAASO,GAEtC,IAAIC,EAAM,IAAIC,eACbC,EAAM3D,EAAQuD,aAAc,iBAE7BK,YAAc5D,EAAQuD,aAAc,gBAGjB,MAAfK,aAAsC,IAAfA,aAC1BH,EAAII,iBAAkB,sBAAwBD,aAG/CH,EAAIK,mBAAqB,SAAU9D,EAASyD,GACpB,IAAnBA,EAAIM,aAEAN,EAAIO,QAAU,KAAOP,EAAIO,OAAS,KAAwB,IAAfP,EAAIO,OAErDf,EAASQ,EAAKE,GAKdH,EAAQC,EAAKE,KAIdM,KAAMxE,KAAMO,EAASyD,GAEvBA,EAAIS,KAAM,MAAOP,GAAK,GAEtB,IACCF,EAAIU,OAEL,MAAQC,GACPC,MAAO,mCAAqCV,EAAM,+GAAiHS,GACnKnB,EAASQ,EAAKE,MAnFUW,CAAsBtE,GAAUuE,KAGtD,SAAUd,EAAKE,GACd3D,EAAQwE,UAAY3C,EAAS4B,EAAIgB,aAAc,CAC9CnD,UAAWtB,EAAQuD,aAAc,kBACjCrB,kBAAmBlC,EAAQuD,aAAc,2BACzChC,eAAgBvB,EAAQuD,aAAc,wBACtC5C,WAAYD,EAAwBV,MAKtC,SAAUyD,EAAKE,GACd3D,EAAQwE,UAAY,2DACcb,EAAM,4BAA8BF,EAAIO,OAAS,0JAS7EhE,EAAQuD,aAAc,mBAAsBvD,EAAQuD,aAAc,4BAA+BvD,EAAQuD,aAAc,wBAE/HvD,EAAQwE,UAAY3C,EAAS9B,EAAsBC,GAAW,CAC7DsB,UAAWtB,EAAQuD,aAAc,kBACjCrB,kBAAmBlC,EAAQuD,aAAc,2BACzChC,eAAgBvB,EAAQuD,aAAc,wBACtC5C,WAAYD,EAAwBV,KAKrCA,EAAQ0E,UAAYlD,EAAqBzB,EAAsBC,MAKjEgD,QAAQ2B,IAAKzB,GAAmBqB,KAAMtB,KA2DxC,SAAS2B,EAAuBC,EAAMC,EAAexD,GAEpD,IAAIyD,EAAgC,IAAIzE,OAAQgB,EAAW,MACvD0D,EAAoB,IAAI1E,OAAQ,yBAA8B,MAC9D2E,EAAYJ,EAAKI,UACrB,GAAIlD,QAAUgD,EAA8BxC,KAAM0C,GAAc,CAE/D,IAAIC,EAAUnD,QAAQ,GAGtB,IAFAkD,EAAYA,EAAUxC,UAAW,EAAGV,QAAQW,OAAUuC,EAAUxC,UAAWsC,EAA8B3C,WACzGyC,EAAKI,UAAYA,EACVE,aAAeH,EAAkBzC,KAAM2C,IAC7CJ,EAAcM,aAAcD,aAAa,GAAIA,aAAa,IAE3D,OAAO,EAER,OAAO,EA8CR,SAASE,IAER,IAAIC,EAAWjC,SAASC,iBAAkB,+CAyB1C,MAvBA,GAAGH,MAAMC,KAAMkC,GAAWzC,QAAS,SAAU7C,GAE5CA,EAAQoF,aAAc,wBAAwB,GAE9C,IAAI5C,EAAQxC,EAAQE,cAAe,eAC/B4B,EAAW/B,EAAsBC,GAErCA,EAAQ0E,UAAYtF,EAAQ0C,GAlD9B,SAASyD,EAAevF,EAASwF,EAASC,EAAiBC,EAA4BC,GAEtF,GAAgB,MAAXH,GAAyCI,MAAtBJ,EAAQK,YAA2BL,EAAQK,WAAWrF,OAAS,EAAI,CAC1FsF,sBAAwBN,EACxB,IAAK,IAAI3E,EAAI,EAAGA,EAAI2E,EAAQK,WAAWrF,OAAQK,IAAM,CAEpD,GADAkF,aAAeP,EAAQK,WAAWhF,GAC7BA,EAAI,EAER,IADAmF,EAAInF,EAAI,EACAmF,GAAK,GAAI,CAEhB,GADAC,sBAAwBT,EAAQK,WAAWG,GACO,mBAAtCC,sBAAsBb,cAA+D,MAAjCa,sBAAsBC,QAAkB,CACvGJ,sBAAwBG,sBACxB,MAEDD,GAAQ,EAGVG,cAAgBnG,EACc,WAA1B+F,aAAaK,WAChBD,cAAgBJ,aAChBD,sBAAwBC,cAEgB,mBAA7BA,aAAaX,cAA8BW,aAAaM,UAAYC,KAAKC,cACpFhB,EAAeY,cAAeJ,aAAcD,sBAAuBJ,EAA4BC,IAK7FH,EAAQa,UAAYC,KAAKC,cACyD,GAAjF3B,EAAuBY,EAASC,EAAiBC,IACrDd,EAAuBY,EAASxF,EAAS2F,GAqB1CJ,CAAgBvF,EAASA,EAAS,KAAMA,EAAQuD,aAAc,4BAC1DvD,EAAQwG,WAAWjD,aAAc,4BACjC3D,EACAI,EAAQuD,aAAc,oBACtBvD,EAAQwG,WAAWjD,aAAc,oBACjC1D,GAIA2C,GACHxC,EAAQyG,YAAajE,KAKhBQ,QAAQC,UAKhB,IAAI3D,EAAiB,CASpBoH,KAAM,SAAUC,GAEf,QAAsB,IAAXvH,EACV,KAAM,6DAGa,oBAATwH,MACVxH,EAAOyH,WAAW,CACjBC,UAAW,SAAUC,EAAMC,GAC1B,OAAOJ,KAAKK,cAAeF,EAAM,CAACC,IAAQhG,SAM7C,IAAIK,EAAU6F,OAAOC,YAAYrF,SAKjC,OAJIT,GACHjC,EAAOyH,WAAYxF,GAGb0B,IAAgBwB,KAAMc,IAK9BtC,cAAeA,EACfsC,cAAeA,EACfxD,QAASA,GAQV,OAFAqF,OAAOE,eAAgB,WAAY9H,GAE5BA","file":"../markdown.min.js","sourcesContent":["/**\n * The reveal.js markdown plugin. Handles parsing of\n * markdown inside of presentations as well as loading\n * of external markdown documents.\n */\n(function( root, factory ) {\n\tif (typeof define === 'function' && define.amd) {\n\t\troot.marked = require( './marked' );\n\t\troot.RevealMarkdown = factory( root.marked );\n\t} else if( typeof exports === 'object' ) {\n\t\tmodule.exports = factory( require( './marked' ) );\n\t} else {\n\t\t// Browser globals (root is window)\n\t\troot.RevealMarkdown = factory( root.marked );\n\t}\n}( this, function( marked ) {\n\n\tvar DEFAULT_SLIDE_SEPARATOR = '^\\r?\\n---\\r?\\n$',\n\t\tDEFAULT_NOTES_SEPARATOR = 'notes?:',\n\t\tDEFAULT_ELEMENT_ATTRIBUTES_SEPARATOR = '\\\\\\.element\\\\\\s*?(.+?)$',\n\t\tDEFAULT_SLIDE_ATTRIBUTES_SEPARATOR = '\\\\\\.slide:\\\\\\s*?(\\\\\\S.+?)$';\n\n\tvar SCRIPT_END_PLACEHOLDER = '__SCRIPT_END__';\n\n\n\t/**\n\t * Retrieves the markdown contents of a slide section\n\t * element. Normalizes leading tabs/whitespace.\n\t */\n\tfunction getMarkdownFromSlide( section ) {\n\n\t\t// look for a <script> or <textarea data-template> wrapper\n\t\tvar template = section.querySelector( '[data-template]' ) || section.querySelector( 'script' );\n\n\t\t// strip leading whitespace so it isn't evaluated as code\n\t\tvar text = ( template || section ).textContent;\n\n\t\t// restore script end tags\n\t\ttext = text.replace( new RegExp( SCRIPT_END_PLACEHOLDER, 'g' ), '</script>' );\n\n\t\tvar leadingWs = text.match( /^\\n?(\\s*)/ )[1].length,\n\t\t\tleadingTabs = text.match( /^\\n?(\\t*)/ )[1].length;\n\n\t\tif( leadingTabs > 0 ) {\n\t\t\ttext = text.replace( new RegExp('\\\\n?\\\\t{' + leadingTabs + '}','g'), '\\n' );\n\t\t}\n\t\telse if( leadingWs > 1 ) {\n\t\t\ttext = text.replace( new RegExp('\\\\n? {' + leadingWs + '}', 'g'), '\\n' );\n\t\t}\n\n\t\treturn text;\n\n\t}\n\n\t/**\n\t * Given a markdown slide section element, this will\n\t * return all arguments that aren't related to markdown\n\t * parsing. Used to forward any other user-defined arguments\n\t * to the output markdown slide.\n\t */\n\tfunction getForwardedAttributes( section ) {\n\n\t\tvar attributes = section.attributes;\n\t\tvar result = [];\n\n\t\tfor( var i = 0, len = attributes.length; i < len; i++ ) {\n\t\t\tvar name = attributes[i].name,\n\t\t\t\tvalue = attributes[i].value;\n\n\t\t\t// disregard attributes that are used for markdown loading/parsing\n\t\t\tif( /data\\-(markdown|separator|vertical|notes)/gi.test( name ) ) continue;\n\n\t\t\tif( value ) {\n\t\t\t\tresult.push( name + '=\"' + value + '\"' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult.push( name );\n\t\t\t}\n\t\t}\n\n\t\treturn result.join( ' ' );\n\n\t}\n\n\t/**\n\t * Inspects the given options and fills out default\n\t * values for what's not defined.\n\t */\n\tfunction getSlidifyOptions( options ) {\n\n\t\toptions = options || {};\n\t\toptions.separator = options.separator || DEFAULT_SLIDE_SEPARATOR;\n\t\toptions.notesSeparator = options.notesSeparator || DEFAULT_NOTES_SEPARATOR;\n\t\toptions.attributes = options.attributes || '';\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Helper function for constructing a markdown slide.\n\t */\n\tfunction createMarkdownSlide( content, options ) {\n\n\t\toptions = getSlidifyOptions( options );\n\n\t\tvar notesMatch = content.split( new RegExp( options.notesSeparator, 'mgi' ) );\n\n\t\tif( notesMatch.length === 2 ) {\n\t\t\tcontent = notesMatch[0] + '<aside class=\"notes\">' + marked(notesMatch[1].trim()) + '</aside>';\n\t\t}\n\n\t\t// prevent script end tags in the content from interfering\n\t\t// with parsing\n\t\tcontent = content.replace( /<\\/script>/g, SCRIPT_END_PLACEHOLDER );\n\n\t\treturn '<script type=\"text/template\">' + content + '</script>';\n\n\t}\n\n\t/**\n\t * Parses a data string into multiple slides based\n\t * on the passed in separator arguments.\n\t */\n\tfunction slidify( markdown, options ) {\n\n\t\toptions = getSlidifyOptions( options );\n\n\t\tvar separatorRegex = new RegExp( options.separator + ( options.verticalSeparator ? '|' + options.verticalSeparator : '' ), 'mg' ),\n\t\t\thorizontalSeparatorRegex = new RegExp( options.separator );\n\n\t\tvar matches,\n\t\t\tlastIndex = 0,\n\t\t\tisHorizontal,\n\t\t\twasHorizontal = true,\n\t\t\tcontent,\n\t\t\tsectionStack = [];\n\n\t\t// iterate until all blocks between separators are stacked up\n\t\twhile( matches = separatorRegex.exec( markdown ) ) {\n\t\t\tnotes = null;\n\n\t\t\t// determine direction (horizontal by default)\n\t\t\tisHorizontal = horizontalSeparatorRegex.test( matches[0] );\n\n\t\t\tif( !isHorizontal && wasHorizontal ) {\n\t\t\t\t// create vertical stack\n\t\t\t\tsectionStack.push( [] );\n\t\t\t}\n\n\t\t\t// pluck slide content from markdown input\n\t\t\tcontent = markdown.substring( lastIndex, matches.index );\n\n\t\t\tif( isHorizontal && wasHorizontal ) {\n\t\t\t\t// add to horizontal stack\n\t\t\t\tsectionStack.push( content );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// add to vertical stack\n\t\t\t\tsectionStack[sectionStack.length-1].push( content );\n\t\t\t}\n\n\t\t\tlastIndex = separatorRegex.lastIndex;\n\t\t\twasHorizontal = isHorizontal;\n\t\t}\n\n\t\t// add the remaining slide\n\t\t( wasHorizontal ? sectionStack : sectionStack[sectionStack.length-1] ).push( markdown.substring( lastIndex ) );\n\n\t\tvar markdownSections = '';\n\n\t\t// flatten the hierarchical stack, and insert <section data-markdown> tags\n\t\tfor( var i = 0, len = sectionStack.length; i < len; i++ ) {\n\t\t\t// vertical\n\t\t\tif( sectionStack[i] instanceof Array ) {\n\t\t\t\tmarkdownSections += '<section '+ options.attributes +'>';\n\n\t\t\t\tsectionStack[i].forEach( function( child ) {\n\t\t\t\t\tmarkdownSections += '<section data-markdown>' + createMarkdownSlide( child, options ) + '</section>';\n\t\t\t\t} );\n\n\t\t\t\tmarkdownSections += '</section>';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmarkdownSections += '<section '+ options.attributes +' data-markdown>' + createMarkdownSlide( sectionStack[i], options ) + '</section>';\n\t\t\t}\n\t\t}\n\n\t\treturn markdownSections;\n\n\t}\n\n\t/**\n\t * Parses any current data-markdown slides, splits\n\t * multi-slide markdown into separate sections and\n\t * handles loading of external markdown.\n\t */\n\tfunction processSlides() {\n\n\t\treturn new Promise( function( resolve ) {\n\n\t\t\tvar externalPromises = [];\n\n\t\t\t[].slice.call( document.querySelectorAll( '[data-markdown]') ).forEach( function( section, i ) {\n\n\t\t\t\tif( section.getAttribute( 'data-markdown' ).length ) {\n\n\t\t\t\t\texternalPromises.push( loadExternalMarkdown( section ).then(\n\n\t\t\t\t\t\t// Finished loading external file\n\t\t\t\t\t\tfunction( xhr, url ) {\n\t\t\t\t\t\t\tsection.outerHTML = slidify( xhr.responseText, {\n\t\t\t\t\t\t\t\tseparator: section.getAttribute( 'data-separator' ),\n\t\t\t\t\t\t\t\tverticalSeparator: section.getAttribute( 'data-separator-vertical' ),\n\t\t\t\t\t\t\t\tnotesSeparator: section.getAttribute( 'data-separator-notes' ),\n\t\t\t\t\t\t\t\tattributes: getForwardedAttributes( section )\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// Failed to load markdown\n\t\t\t\t\t\tfunction( xhr, url ) {\n\t\t\t\t\t\t\tsection.outerHTML = '<section data-state=\"alert\">' +\n\t\t\t\t\t\t\t\t'ERROR: The attempt to fetch ' + url + ' failed with HTTP status ' + xhr.status + '.' +\n\t\t\t\t\t\t\t\t'Check your browser\\'s JavaScript console for more details.' +\n\t\t\t\t\t\t\t\t'<p>Remember that you need to serve the presentation HTML from a HTTP server.</p>' +\n\t\t\t\t\t\t\t\t'</section>';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t) );\n\n\t\t\t\t}\n\t\t\t\telse if( section.getAttribute( 'data-separator' ) || section.getAttribute( 'data-separator-vertical' ) || section.getAttribute( 'data-separator-notes' ) ) {\n\n\t\t\t\t\tsection.outerHTML = slidify( getMarkdownFromSlide( section ), {\n\t\t\t\t\t\tseparator: section.getAttribute( 'data-separator' ),\n\t\t\t\t\t\tverticalSeparator: section.getAttribute( 'data-separator-vertical' ),\n\t\t\t\t\t\tnotesSeparator: section.getAttribute( 'data-separator-notes' ),\n\t\t\t\t\t\tattributes: getForwardedAttributes( section )\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsection.innerHTML = createMarkdownSlide( getMarkdownFromSlide( section ) );\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tPromise.all( externalPromises ).then( resolve );\n\n\t\t} );\n\n\t}\n\n\tfunction loadExternalMarkdown( section ) {\n\n\t\treturn new Promise( function( resolve, reject ) {\n\n\t\t\tvar xhr = new XMLHttpRequest(),\n\t\t\t\turl = section.getAttribute( 'data-markdown' );\n\n\t\t\tdatacharset = section.getAttribute( 'data-charset' );\n\n\t\t\t// see https://developer.mozilla.org/en-US/docs/Web/API/element.getAttribute#Notes\n\t\t\tif( datacharset != null && datacharset != '' ) {\n\t\t\t\txhr.overrideMimeType( 'text/html; charset=' + datacharset );\n\t\t\t}\n\n\t\t\txhr.onreadystatechange = function( section, xhr ) {\n\t\t\t\tif( xhr.readyState === 4 ) {\n\t\t\t\t\t// file protocol yields status code 0 (useful for local debug, mobile applications etc.)\n\t\t\t\t\tif ( ( xhr.status >= 200 && xhr.status < 300 ) || xhr.status === 0 ) {\n\n\t\t\t\t\t\tresolve( xhr, url );\n\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\n\t\t\t\t\t\treject( xhr, url );\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}.bind( this, section, xhr );\n\n\t\t\txhr.open( 'GET', url, true );\n\n\t\t\ttry {\n\t\t\t\txhr.send();\n\t\t\t}\n\t\t\tcatch ( e ) {\n\t\t\t\talert( 'Failed to get the Markdown file ' + url + '. Make sure that the presentation and the file are served by a HTTP server and the file can be found there. ' + e );\n\t\t\t\tresolve( xhr, url );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Check if a node value has the attributes pattern.\n\t * If yes, extract it and add that value as one or several attributes\n\t * to the target element.\n\t *\n\t * You need Cache Killer on Chrome to see the effect on any FOM transformation\n\t * directly on refresh (F5)\n\t * http://stackoverflow.com/questions/5690269/disabling-chrome-cache-for-website-development/7000899#answer-11786277\n\t */\n\tfunction addAttributeInElement( node, elementTarget, separator ) {\n\n\t\tvar mardownClassesInElementsRegex = new RegExp( separator, 'mg' );\n\t\tvar mardownClassRegex = new RegExp( \"([^\\\"= ]+?)=\\\"([^\\\"=]+?)\\\"\", 'mg' );\n\t\tvar nodeValue = node.nodeValue;\n\t\tif( matches = mardownClassesInElementsRegex.exec( nodeValue ) ) {\n\n\t\t\tvar classes = matches[1];\n\t\t\tnodeValue = nodeValue.substring( 0, matches.index ) + nodeValue.substring( mardownClassesInElementsRegex.lastIndex );\n\t\t\tnode.nodeValue = nodeValue;\n\t\t\twhile( matchesClass = mardownClassRegex.exec( classes ) ) {\n\t\t\t\telementTarget.setAttribute( matchesClass[1], matchesClass[2] );\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Add attributes to the parent element of a text node,\n\t * or the element of an attribute node.\n\t */\n\tfunction addAttributes( section, element, previousElement, separatorElementAttributes, separatorSectionAttributes ) {\n\n\t\tif ( element != null && element.childNodes != undefined && element.childNodes.length > 0 ) {\n\t\t\tpreviousParentElement = element;\n\t\t\tfor( var i = 0; i < element.childNodes.length; i++ ) {\n\t\t\t\tchildElement = element.childNodes[i];\n\t\t\t\tif ( i > 0 ) {\n\t\t\t\t\tj = i - 1;\n\t\t\t\t\twhile ( j >= 0 ) {\n\t\t\t\t\t\taPreviousChildElement = element.childNodes[j];\n\t\t\t\t\t\tif ( typeof aPreviousChildElement.setAttribute == 'function' && aPreviousChildElement.tagName != \"BR\" ) {\n\t\t\t\t\t\t\tpreviousParentElement = aPreviousChildElement;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tj = j - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tparentSection = section;\n\t\t\t\tif( childElement.nodeName ==  \"section\" ) {\n\t\t\t\t\tparentSection = childElement ;\n\t\t\t\t\tpreviousParentElement = childElement ;\n\t\t\t\t}\n\t\t\t\tif ( typeof childElement.setAttribute == 'function' || childElement.nodeType == Node.COMMENT_NODE ) {\n\t\t\t\t\taddAttributes( parentSection, childElement, previousParentElement, separatorElementAttributes, separatorSectionAttributes );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( element.nodeType == Node.COMMENT_NODE ) {\n\t\t\tif ( addAttributeInElement( element, previousElement, separatorElementAttributes ) == false ) {\n\t\t\t\taddAttributeInElement( element, section, separatorSectionAttributes );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Converts any current data-markdown slides in the\n\t * DOM to HTML.\n\t */\n\tfunction convertSlides() {\n\n\t\tvar sections = document.querySelectorAll( '[data-markdown]:not([data-markdown-parsed])');\n\n\t\t[].slice.call( sections ).forEach( function( section ) {\n\n\t\t\tsection.setAttribute( 'data-markdown-parsed', true )\n\n\t\t\tvar notes = section.querySelector( 'aside.notes' );\n\t\t\tvar markdown = getMarkdownFromSlide( section );\n\n\t\t\tsection.innerHTML = marked( markdown );\n\t\t\taddAttributes( \tsection, section, null, section.getAttribute( 'data-element-attributes' ) ||\n\t\t\t\t\t\t\tsection.parentNode.getAttribute( 'data-element-attributes' ) ||\n\t\t\t\t\t\t\tDEFAULT_ELEMENT_ATTRIBUTES_SEPARATOR,\n\t\t\t\t\t\t\tsection.getAttribute( 'data-attributes' ) ||\n\t\t\t\t\t\t\tsection.parentNode.getAttribute( 'data-attributes' ) ||\n\t\t\t\t\t\t\tDEFAULT_SLIDE_ATTRIBUTES_SEPARATOR);\n\n\t\t\t// If there were notes, we need to re-add them after\n\t\t\t// having overwritten the section's HTML\n\t\t\tif( notes ) {\n\t\t\t\tsection.appendChild( notes );\n\t\t\t}\n\n\t\t} );\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t// API\n\tvar RevealMarkdown = {\n\n\t\t/**\n\t\t * Starts processing and converting Markdown within the\n\t\t * current reveal.js deck.\n\t\t *\n\t\t * @param {function} callback function to invoke once\n\t\t * we've finished loading and parsing Markdown\n\t\t */\n\t\tinit: function( callback ) {\n\n\t\t\tif( typeof marked === 'undefined' ) {\n\t\t\t\tthrow 'The reveal.js Markdown plugin requires marked to be loaded';\n\t\t\t}\n\n\t\t\tif( typeof hljs !== 'undefined' ) {\n\t\t\t\tmarked.setOptions({\n\t\t\t\t\thighlight: function( code, lang ) {\n\t\t\t\t\t\treturn hljs.highlightAuto( code, [lang] ).value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// marked can be configured via reveal.js config options\n\t\t\tvar options = Reveal.getConfig().markdown;\n\t\t\tif( options ) {\n\t\t\t\tmarked.setOptions( options );\n\t\t\t}\n\n\t\t\treturn processSlides().then( convertSlides );\n\n\t\t},\n\n\t\t// TODO: Do these belong in the API?\n\t\tprocessSlides: processSlides,\n\t\tconvertSlides: convertSlides,\n\t\tslidify: slidify\n\n\t};\n\n\t// Register our plugin so that reveal.js will call our\n\t// plugin 'init' method as part of the initialization\n\tReveal.registerPlugin( 'markdown', RevealMarkdown );\n\n\treturn RevealMarkdown;\n\n}));\n"]}